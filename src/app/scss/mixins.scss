
@mixin center-absolute(){
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%,-50%);
}

@mixin disable-content(){
  &:before {
    content: '';
    position: absolute;
    z-index: 1000 !important;
    width: 100%;
    height: 100%;
    top: 0;
    @content;
  }
}

@mixin cursor-pointer(){
  cursor: pointer;
}
@mixin cursor-notAllowed(){
  cursor: not-allowed;
}

@mixin cursor() {
  .alias {
    cursor: alias;
  }
  .all-scroll {
    cursor: all-scroll;
  }
  .auto {
    cursor: auto;
  }
  .cell {
    cursor: cell;
  }
  .context-menu {
    cursor: context-menu;
  }
  .col-resize {
    cursor: col-resize;
  }
  .copy {
    cursor: copy;
  }
  .crosshair {
    cursor: crosshair;
  }
  .default {
    cursor: default;
  }
  .e-resize {
    cursor: e-resize;
  }
  .ew-resize {
    cursor: ew-resize;
  }
  .grab {
    cursor: -webkit-grab;
    cursor: grab;
  }
  .grabbing {
    cursor: -webkit-grabbing;
    cursor: grabbing;
  }
  .help {
    cursor: help;
  }
  .move {
    cursor: move;
  }
  .n-resize {
    cursor: n-resize;
  }
  .ne-resize {
    cursor: ne-resize;
  }
  .nesw-resize {
    cursor: nesw-resize;
  }
  .ns-resize {
    cursor: ns-resize;
  }
  .nw-resize {
    cursor: nw-resize;
  }
  .nwse-resize {
    cursor: nwse-resize;
  }
  .no-drop {
    cursor: no-drop;
  }
  .none {
    cursor: none;
  }
  .not-allowed {
    cursor: not-allowed;
  }
  .pointer {
    cursor: pointer;
  }
  .progress {
    cursor: progress;
  }
  .row-resize {
    cursor: row-resize;
  }
  .s-resize {
    cursor: s-resize;
  }
  .se-resize {
    cursor: se-resize;
  }
  .sw-resize {
    cursor: sw-resize;
  }
  .text {
    cursor: text;
  }
  .url {
    //cursor: url(myBall.cur), auto;
  }
  .w-resize {
    cursor: w-resize;
  }
  .wait {
    cursor: wait;
  }
  .zoom-in {
    cursor: zoom-in;
  }
  .zoom-out {
    cursor: zoom-out;
  }
}
